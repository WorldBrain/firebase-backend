rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /sharedSyncLogDeviceInfo/{userId} {
            match /devices/{sharedSyncLogDeviceInfo} {
                allow list: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow get: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow create: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow update: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow delete: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
            }
        }
        match /sharedSyncLogEntryBatch/{userId} {
            match /entries/{sharedSyncLogEntryBatch} {
                allow list: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow get: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow create: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
                allow delete: if 
                  // Ownership rules
                  request.auth.uid == userId
                ;
            }
        }
        match /homeFeedInfo/{user} {
            allow get: if 
              // Ownership rules
              request.auth.uid == user
            ;
            allow create: if 
              // Type checks
              request.resource.data.lastSeen is timestamp &&
            
            
              // Ownership rules
              request.auth.uid == user
            ;
            allow update: if 
              // Type checks
              request.resource.data.lastSeen is timestamp &&
            
            
              // Ownership rules
              request.auth.uid == user
            ;
        }
        match /activityFollow/{activityFollow} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.objectId is string &&
              request.resource.data.collection is string &&
              request.resource.data.createdWhen is timestamp &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.user
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.user
            ;
        }
        match /sharedList/{sharedList} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.title is string &&
              (!('description' in request.resource.data.keys()) || request.resource.data.description is string) &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.creator
            ;
            allow update: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.title is string &&
              (!('description' in request.resource.data.keys()) || request.resource.data.description is string) &&
            
            
              // Ownership rules
              request.auth.uid == resource.data.creator && (request.auth.uid == request.resource.data.creator || (!('creator' in request.resource.data.keys())))
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.creator
            ;
        }
        match /sharedListCreatorInfo/{creator} {
            match /lists/{sharedListCreatorInfo} {
                allow list: if 
                  // Permission rules
                  true
                ;
                allow get: if 
                  // Permission rules
                  true
                ;
                allow create: if 
                  // Type checks
                  request.resource.data.localListId is timestamp &&
                
                
                  // Ownership rules
                  request.auth.uid == creator
                ;
                allow update: if 
                  // Type checks
                  request.resource.data.localListId is timestamp &&
                
                
                  // Ownership rules
                  request.auth.uid == creator
                ;
                allow delete: if 
                  // Ownership rules
                  request.auth.uid == creator
                ;
            }
        }
        match /sharedListEntry/{sharedListEntry} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.entryTitle is string &&
              request.resource.data.normalizedUrl is string &&
              request.resource.data.originalUrl is string &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.creator
            ;
            allow update: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.entryTitle is string &&
              request.resource.data.normalizedUrl is string &&
              request.resource.data.originalUrl is string &&
            
            
              // Ownership rules
              request.auth.uid == resource.data.creator && (request.auth.uid == request.resource.data.creator || (!('creator' in request.resource.data.keys())))
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.creator
            ;
        }
        match /sharedPageInfo/{sharedPageInfo} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.normalizedUrl is string &&
              request.resource.data.originalUrl is string &&
              request.resource.data.fullTitle is string &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.creator
            ;
            allow update: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.normalizedUrl is string &&
              request.resource.data.originalUrl is string &&
              request.resource.data.fullTitle is string &&
            
            
              // Ownership rules
              request.auth.uid == resource.data.creator && (request.auth.uid == request.resource.data.creator || (!('creator' in request.resource.data.keys())))
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.creator
            ;
        }
        match /sharedAnnotation/{sharedAnnotation} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.normalizedPageUrl is string &&
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.uploadedWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              (!('body' in request.resource.data.keys()) || request.resource.data.body is string) &&
              (!('comment' in request.resource.data.keys()) || request.resource.data.comment is string) &&
              (!('selector' in request.resource.data.keys()) || request.resource.data.selector is string) &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.creator
            ;
            allow update: if 
              // Type checks
              request.resource.data.normalizedPageUrl is string &&
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.uploadedWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              (!('body' in request.resource.data.keys()) || request.resource.data.body is string) &&
              (!('comment' in request.resource.data.keys()) || request.resource.data.comment is string) &&
              (!('selector' in request.resource.data.keys()) || request.resource.data.selector is string) &&
            
            
              // Ownership rules
              request.auth.uid == resource.data.creator && (request.auth.uid == request.resource.data.creator || (!('creator' in request.resource.data.keys())))
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.creator
            ;
        }
        match /sharedAnnotationListEntry/{sharedAnnotationListEntry} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.uploadedWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.normalizedPageUrl is string &&
            
            
              // Ownership rules
              request.auth.uid == request.resource.data.creator
            ;
            allow update: if 
              // Type checks
              request.resource.data.createdWhen is timestamp &&
              request.resource.data.uploadedWhen is timestamp &&
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.normalizedPageUrl is string &&
            
            
              // Ownership rules
              request.auth.uid == resource.data.creator && (request.auth.uid == request.resource.data.creator || (!('creator' in request.resource.data.keys())))
            ;
            allow delete: if 
              // Ownership rules
              request.auth.uid == resource.data.creator
            ;
        }
        match /conversationThread/{conversationThread} {
            allow list: if 
              // Permission rules
              true
            ;
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              request.resource.data.updatedWhen is timestamp &&
              request.resource.data.normalizedPageUrl is string &&
            
            
              // Permission rules
              true
            ;
        }
        match /conversationReply/{sharedAnnotation} {
            match /replies/{conversationReply} {
                allow list: if 
                  // Permission rules
                  true
                ;
                allow get: if 
                  // Permission rules
                  true
                ;
                allow create: if 
                  // Type checks
                  request.resource.data.createdWhen is timestamp &&
                  request.resource.data.normalizedPageUrl is string &&
                  request.resource.data.content is string &&
                
                
                  // Ownership rules
                  request.auth.uid == request.resource.data.user
                ;
            }
        }
        match /user/{id} {
            allow get: if 
              // Permission rules
              true
            ;
            allow create: if 
              // Type checks
              (!('displayName' in request.resource.data.keys()) || request.resource.data.displayName is string) &&
            
            
              // Ownership rules
              request.auth.uid == id
            ;
            allow update: if 
              // Type checks
              (!('displayName' in request.resource.data.keys()) || request.resource.data.displayName is string) &&
            
            
              // Ownership rules
              request.auth.uid == id
            ;
        }
    }
}